// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DATABASE_PRIVATE_URL")
}

enum OrderStatus {
  WaitingForCollaborator
  OnItsWay
  Delivered
}

enum Role {
  User
  Collaborator
  Admin
}

model User {
  id             String  @id @unique @default(uuid())
  email          String  @unique
  password       String
  name           String?
  id_document    String?
  phone_number   String?
  id_condominium String?
  block          String?
  apartment      String?
  role           Role    @default(User)

  OrderUser OrderUser[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Order {
  id            String      @id @unique @default(uuid())
  receivingCode Int?
  status        OrderStatus @default(WaitingForCollaborator)

  OrderUser OrderUser[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("order")
}

model OrderUser {
  id      String @id @unique @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@index([userId])
  @@index([orderId])
  @@map("order_user")
}
